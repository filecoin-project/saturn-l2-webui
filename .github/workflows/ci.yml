name: ci
on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache bigger downloads
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      # Separate cache for build dir, we reuse it in release publish workflow
      - name: Cache build output
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/cache@v2
        id: build-cache
        with:
          path: dist
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ github.sha }}
      - name: Confirm build works
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm run build

      # Persist produced build dir:
      # - this is not for releases, but for quick testing during the dev
      # - action artifacts can be downloaded for 90 days, then are removed by github
      - name: Attach produced build to Github Action
        uses: actions/upload-artifact@v2
        with:
          name: saturn-l2-webui_${{ github.sha }}
          path: dist
          if-no-files-found: error

  test-unit:
    name: 'test:unit'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache bigger downloads
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      - name: Run unit tests
        run: npm run test:unit

  test-e2e:
    name: 'test:e2e'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache bigger downloads
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: saturn-l2-webui_${{ github.sha }}
          path: dist

      - name: Run E2E tests
        run: npm run test:e2e

  # separate check for TS
  typecheck:
    name: typecheck
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache bigger downloads
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      - name: Fancy Typecheck with GH annotations
        uses: gozala/typescript-error-reporter-action@v1.0.8
        with:
          project: tsconfig.json

      # make sure local check is also ok
      - name: Userland check
        run: npm run typecheck

  # separate check for eslint
  eslint:
    name: eslint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache bigger downloads
        uses: actions/cache@v2
        id: cache
        with:
          path: ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('package.json', 'package-lock.json') }}
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false --cache ${{ github.workspace }}/.cache/npm

      - name: ESLint
        run: npm run eslint
